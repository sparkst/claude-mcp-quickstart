# REQ-PERF-047: Performance CI/CD Integration
# Continuous performance monitoring and regression detection

name: Performance Monitoring

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run performance tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  performance-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run CLI performance benchmarks
      run: npm run benchmark

    - name: Run comprehensive performance regression test
      run: npm run perf

    - name: Run agent coordination monitoring
      run: npm run benchmark:agents

    - name: Upload performance artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-reports-${{ matrix.node-version }}
        path: .performance/
        retention-days: 30

    - name: Performance regression check
      run: |
        # Check if performance report indicates regressions
        if [ -f .performance/regression-report-*.json ]; then
          LATEST_REPORT=$(ls -t .performance/regression-report-*.json | head -n1)
          OVERALL_STATUS=$(node -e "
            const report = require('./${LATEST_REPORT}');
            console.log(report.summary.overallStatus);
          ")

          if [ "$OVERALL_STATUS" != "ALL_PERFORMANCE_TARGETS_MET" ]; then
            echo "❌ Performance regression detected: $OVERALL_STATUS"
            exit 1
          else
            echo "✅ All performance targets met"
          fi
        fi

  performance-comparison:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: performance-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run baseline performance test (main branch)
      run: |
        git checkout main
        npm ci
        npm run benchmark > baseline-performance.txt 2>&1 || true
        git checkout -

    - name: Run current performance test
      run: |
        npm run benchmark > current-performance.txt 2>&1 || true

    - name: Compare performance
      run: |
        echo "## Performance Comparison" >> performance-comment.md
        echo "" >> performance-comment.md
        echo "### Baseline (main branch):" >> performance-comment.md
        echo "\`\`\`" >> performance-comment.md
        cat baseline-performance.txt >> performance-comment.md
        echo "\`\`\`" >> performance-comment.md
        echo "" >> performance-comment.md
        echo "### Current (PR branch):" >> performance-comment.md
        echo "\`\`\`" >> performance-comment.md
        cat current-performance.txt >> performance-comment.md
        echo "\`\`\`" >> performance-comment.md

    - name: Comment PR with performance results
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const comment = fs.readFileSync('performance-comment.md', 'utf8');

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  performance-alerts:
    runs-on: ubuntu-latest
    needs: performance-test
    if: failure()

    steps:
    - name: Send performance alert
      uses: actions/github-script@v7
      with:
        script: |
          const title = '🚨 Performance Regression Detected';
          const body = `
          Performance tests have failed on \`${context.ref}\`.

          **Details:**
          - Workflow: ${context.workflow}
          - Run ID: ${context.runId}
          - Commit: ${context.sha}

          Please review the performance reports and address any regressions.
          `;

          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['performance', 'regression', 'priority-high']
          });